{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { SignInSuccess, SignInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.util';\nexport function* getSnapshotFromUserAuth(userAuthRef) {\n  try {\n    const {\n      user\n    } = userAuthRef;\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const userAuthRef = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(userAuthRef);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const userAuthRef = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(userAuthRef);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/mogyorosistefan/Documents/Complete React Dev 2020/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","SignInSuccess","SignInFailure","auth","googleProvider","createUserProfileDocument","getSnapshotFromUserAuth","userAuthRef","user","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,aAAR,EAAuBC,aAAvB,QAA2C,gBAA3C;AACA,SAAQC,IAAR,EAAcC,cAAd,EAA8BC,yBAA9B,QAA8D,8BAA9D;AAGA,OAAO,UAAUC,uBAAV,CAAkCC,WAAlC,EAA8C;AACjD,MAAI;AAEA,UAAM;AAACC,MAAAA;AAAD,QAASD,WAAf;AACA,UAAME,OAAO,GAAG,MAAMV,IAAI,CAACM,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACI,aAAa,CAAC;AAACW,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CAAd,CAAT;AACH,GAND,CAME,OAAOC,KAAP,EAAc;AACZ,UAAMjB,GAAG,CAACK,aAAa,CAACY,KAAD,CAAd,CAAT;AACH;AACJ;AAGD,OAAO,UAAUC,gBAAV,GAA8B;AACjC,MAAI;AACA,UAAMR,WAAW,GAAG,MAAMJ,IAAI,CAACa,eAAL,CAAqBZ,cAArB,CAA1B;AACA,UAAME,uBAAuB,CAACC,WAAD,CAA7B;AACH,GAHD,CAGE,OAAOO,KAAP,EAAc;AACZ,UAAMjB,GAAG,CAACK,aAAa,CAACY,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUG,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP;AAAV,CAA1B,EAAuD;AAC1D,MAAG;AACC,UAAMb,WAAW,GAAG,MAAMJ,IAAI,CAACkB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAA1B;AACA,UAAMd,uBAAuB,CAACC,WAAD,CAA7B;AAEH,GAJD,CAIC,OAAOO,KAAP,EAAc;AACX,UAAMjB,GAAG,CAACK,aAAa,CAACY,KAAD,CAAd,CAAT;AACH;AAEJ;AAGD,OAAO,UAAUQ,mBAAV,GAAgC;AACnC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,oBAAjB,EAAuCR,gBAAvC,CAAhB;AACH;AAGD,OAAO,UAAUS,kBAAV,GAA+B;AAClC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAsCR,eAAtC,CAAhB;AACH;AAGD,OAAO,UAAUS,SAAV,GAAsB;AACzB,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAACuB,mBAAD,CAAL,EAA4BvB,IAAI,CAACyB,kBAAD,CAAhC,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\nimport {SignInSuccess, SignInFailure} from './user.actions';\nimport {auth, googleProvider, createUserProfileDocument} from '../../firebase/firebase.util';\n\n\nexport function* getSnapshotFromUserAuth(userAuthRef){\n    try {\n\n        const {user} = userAuthRef;\n        const userRef = yield call(createUserProfileDocument, user);\n        const userSnapshot = yield userRef.get();\n        yield put(SignInSuccess({id: userSnapshot.id, ...userSnapshot.data()}));\n    } catch (error) {\n        yield put(SignInFailure(error));\n    }\n}\n\n\nexport function* signInWithGoogle () {\n    try {\n        const userAuthRef = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(userAuthRef);\n    } catch (error) {\n        yield put(SignInFailure(error));\n    }\n}\n\nexport function* signInWithEmail({payload: {email,password}}) {\n    try{\n        const userAuthRef = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(userAuthRef);\n\n    }catch (error) {\n        yield put(SignInFailure(error));\n    }\n\n}\n \n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\n\nexport function* userSagas() {\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}"]},"metadata":{},"sourceType":"module"}