{"ast":null,"code":"var _jsxFileName = \"/Users/mogyorosistefan/Documents/Complete React Dev 2020/crwn-clothing/src/components/cart-icon/cart-icon.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { ReactComponent as ShoppingIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/shopping-bag.svg\";\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport { selectCartItemsCount, selectCartHidden } from '../../redux/cart/cart.selectors';\nimport './cart-icon.styles.scss';\n\nconst CartIcon = ({\n  toggleCartHidden,\n  itemCount,\n  hidden\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"cart-icon\",\n  onClick: toggleCartHidden(),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(ShoppingIcon, {\n  className: \"shopping-icon\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"item-count\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }\n}, itemCount)); // const mapStateToProps = (state) => ({   //THIS IS A SELECTOR IN REDUX \n//   itemCount: selectCartItemsCount(state) //this is a classic way, no use of structuredselector\n// })\n\n\nconst mapStateToProps = createStructuredSelector({\n  //THIS IS A SELECTOR IN REDUX \n  itemCount: selectCartItemsCount,\n  hidden: selectCartHidden\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: hidden => dispatch(toggleCartHidden(hidden))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);","map":{"version":3,"sources":["/Users/mogyorosistefan/Documents/Complete React Dev 2020/crwn-clothing/src/components/cart-icon/cart-icon.component.jsx"],"names":["React","connect","createStructuredSelector","toggleCartHidden","selectCartItemsCount","selectCartHidden","CartIcon","itemCount","hidden","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;;AAGA,SAAQC,gBAAR,QAA+B,+BAA/B;AACA,SAAQC,oBAAR,EAA8BC,gBAA9B,QAAqD,iCAArD;AAEA,OAAO,yBAAP;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEH,EAAAA,gBAAF;AAAoBI,EAAAA,SAApB;AAA+BC,EAAAA;AAA/B,CAAD,kBACb;AAAK,EAAA,SAAS,EAAC,WAAf;AAA2B,EAAA,OAAO,EAAEL,gBAAgB,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,YAAD;AAAc,EAAA,SAAS,EAAC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE;AAAM,EAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA8BI,SAA9B,CAFF,CADJ,C,CAOA;AACA;AACA;;;AAEA,MAAME,eAAe,GAAGP,wBAAwB,CAAE;AAAI;AACpDK,EAAAA,SAAS,EAAEH,oBADqC;AAEhDI,EAAAA,MAAM,EAAEH;AAFwC,CAAF,CAAhD;;AAQA,MAAMK,kBAAkB,GAAGC,QAAQ,KAAK;AACpCR,EAAAA,gBAAgB,EAAEK,MAAM,IAAIG,QAAQ,CAACR,gBAAgB,CAACK,MAAD,CAAjB;AADA,CAAL,CAAnC;;AAME,eAAeP,OAAO,CACpBQ,eADoB,EAEpBC,kBAFoB,CAAP,CAGbJ,QAHa,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\n\nimport {ReactComponent as ShoppingIcon} from '../../assets/shopping-bag.svg';\nimport {toggleCartHidden} from '../../redux/cart/cart.actions';\nimport {selectCartItemsCount, selectCartHidden} from '../../redux/cart/cart.selectors';\n\nimport './cart-icon.styles.scss';\n\nconst CartIcon = ({ toggleCartHidden, itemCount, hidden }) => (\n    <div className='cart-icon' onClick={toggleCartHidden()}>\n      <ShoppingIcon className='shopping-icon' />\n      <span className='item-count'>{itemCount}</span>\n    </div>\n  );\n\n// const mapStateToProps = (state) => ({   //THIS IS A SELECTOR IN REDUX \n//   itemCount: selectCartItemsCount(state) //this is a classic way, no use of structuredselector\n// })\n\nconst mapStateToProps = createStructuredSelector ({   //THIS IS A SELECTOR IN REDUX \n  itemCount: selectCartItemsCount,\n  hidden: selectCartHidden\n\n})\n\n\n\nconst mapDispatchToProps = dispatch => ({\n    toggleCartHidden: hidden => dispatch(toggleCartHidden(hidden))\n  });\n  \n\n\n  export default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CartIcon);\n"]},"metadata":{},"sourceType":"module"}