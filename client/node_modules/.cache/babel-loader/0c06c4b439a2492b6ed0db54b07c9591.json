{"ast":null,"code":"import { takeLatest, all, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.util';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/Users/mogyorosistefan/Documents/Complete React Dev 2020/crwn-clothing/client/src/redux/shop/shop.sagas.js"],"names":["takeLatest","all","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,GAA/B,QAAyC,oBAAzC;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,8BAAzD;AACA,SAAQC,uBAAR,EAAiCC,uBAAjC,QAA+D,gBAA/D;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,MAAI;AAEA,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAACG,+BAAD,EAAkCO,QAAlC,CAAjC;AACA,UAAMT,GAAG,CAACG,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AACH,GAND,CAME,OAAOC,KAAP,EAAa;AACX,UAAMZ,GAAG,CAACI,uBAAuB,CAACQ,KAAD,CAAxB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMhB,UAAU,CACZQ,eAAe,CAACS,uBADJ,EAEZR,qBAFY,CAAhB;AAKH;AAED,OAAO,UAAUS,SAAV,GAAsB;AACzB,QAAMjB,GAAG,CAAC,CACNC,IAAI,CAACc,qBAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import {takeLatest, all, call, put} from 'redux-saga/effects';\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.util';\nimport {fetchCollectionsSuccess, fetchCollectionsFailure} from './shop.actions';\n\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchCollectionsAsync() {\n    try {\n\n        const collectionRef = firestore.collection('collections');\n        const snapshot = yield collectionRef.get();\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n        yield put(fetchCollectionsSuccess(collectionsMap));\n    } catch (error){\n        yield put(fetchCollectionsFailure(error));\n    }   \n}\n\nexport function* fetchCollectionsStart() {\n    yield takeLatest(\n        ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollectionsAsync\n    );\n\n}\n\nexport function* shopSagas() {\n    yield all([\n        call(fetchCollectionsStart)\n    ]);\n}"]},"metadata":{},"sourceType":"module"}