{"ast":null,"code":"var _jsxFileName = \"/Users/mogyorosistefan/Documents/Complete React Dev 2020/crwn-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.util';\nimport './sign-up.styles.scss';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    signUpStart(email, password, displayName);\n    setUserCredentials({\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"I do not have a account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \" SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (email, password, displayName) => dispatch(signUpStart({\n    email,\n    password,\n    displayName\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/mogyorosistefan/Documents/Complete React Dev 2020/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","auth","createUserProfileDocument","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAAQC,WAAR,QAA0B,+BAA1B;AACA,SAAQC,IAAR,EAAcC,yBAAd,QAA8C,8BAA9C;AAGA,OAAO,uBAAP;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAACH,EAAAA;AAAD,CAAD,KAAmB;AAC9B,QAAM,CAACI,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAE;AAChDU,IAAAA,WAAW,EAAE,EADmC;AAEhDC,IAAAA,KAAK,EAAE,EAFyC;AAGhDC,IAAAA,QAAQ,EAAE,EAHsC;AAIhDC,IAAAA,eAAe,EAAE;AAJ+B,GAAF,CAAtD;AAOA,QAAM;AAACH,IAAAA,WAAD;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA;AAA/B,MAAkDL,eAAxD;;AAEA,QAAMM,YAAY,GAAG,MAAMC,KAAN,IAAe;AAChCA,IAAAA,KAAK,CAACC,cAAN;AAEAZ,IAAAA,WAAW,CAACO,KAAD,EAAQC,QAAR,EAAkBF,WAAlB,CAAX;AAEID,IAAAA,kBAAkB,CAAC;AACfC,MAAAA,WAAW,EAAE,EADE;AAEfC,MAAAA,KAAK,EAAE,EAFQ;AAGfC,MAAAA,QAAQ,EAAE,EAHK;AAIfC,MAAAA,eAAe,EAAE;AAJF,KAAD,CAAlB;AAOP,GAZD;;AAeA,QAAMI,YAAY,GAAGF,KAAK,IAAI;AAC1B,UAAM;AAACG,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBJ,KAAK,CAACK,MAA5B;AACAX,IAAAA,kBAAkB,CAAC,EAAE,GAAGD,eAAL;AAAsB,OAACU,IAAD,GAAQC;AAA9B,KAAD,CAAlB;AACH,GAHD;;AAQI,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFJ,eAII;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAEL,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,aAFT;AAGI,IAAA,KAAK,EAAEJ,WAHX;AAII,IAAA,QAAQ,EAAEO,YAJd;AAKI,IAAA,KAAK,EAAC,cALV;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,KAAK,EAAEN,KAHX;AAII,IAAA,QAAQ,EAAEM,YAJd;AAKI,IAAA,KAAK,EAAC,OALV;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,eAiBI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,KAAK,EAAEL,QAHX;AAII,IAAA,QAAQ,EAAEK,YAJd;AAKI,IAAA,KAAK,EAAC,UALV;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,eAyBI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,IAAI,EAAC,iBAFT;AAGI,IAAA,KAAK,EAAEJ,eAHX;AAII,IAAA,QAAQ,EAAEI,YAJd;AAKI,IAAA,KAAK,EAAC,kBALV;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,eAiCI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjCJ,CAJJ,CADJ;AA6CP,CA9ED;;AAgFA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACpClB,EAAAA,WAAW,EAAE,CAACO,KAAD,EAAQC,QAAR,EAAkBF,WAAlB,KAAkCY,QAAQ,CAAClB,WAAW,CAAC;AAACO,IAAAA,KAAD;AAAQC,IAAAA,QAAR;AAAkBF,IAAAA;AAAlB,GAAD,CAAZ;AADnB,CAAL,CAAnC;;AAIA,eAAeT,OAAO,CAAC,IAAD,EAAMoB,kBAAN,CAAP,CAAiCd,MAAjC,CAAf","sourcesContent":["import React,{useState} from 'react';\nimport {connect} from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport {signUpStart} from '../../redux/user/user.actions';\nimport {auth, createUserProfileDocument} from '../../firebase/firebase.util';\n\n\nimport './sign-up.styles.scss';\n\n\nconst SignUp = ({signUpStart}) => {\n    const [userCredentials, setUserCredentials] = useState( {\n            displayName: '',\n            email: '',\n            password: '', \n            confirmPassword: ''\n        });\n    \n    const {displayName, email, password, confirmPassword} = userCredentials;\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n        \n        signUpStart(email, password, displayName);\n\n            setUserCredentials({\n                displayName: '',\n                email: '',\n                password: '',\n                confirmPassword: ''\n            });\n            \n    }\n\n\n    const handleChange = event => {\n        const {name, value} = event.target;\n        setUserCredentials({ ...userCredentials, [name]: value});\n    }\n\n\n\n        \n        return (\n            <div className='sign-up'>\n                <h2 className='title'>I do not have a account</h2>\n                <span>Sign up with your email and password</span>\n\n                <form className='sign-up-form' onSubmit={handleSubmit}>\n                    <FormInput\n                        type='text'\n                        name='displayName'\n                        value={displayName}\n                        onChange={handleChange}\n                        label='Display Name'\n                        required\n                    />\n                    <FormInput\n                        type='email'\n                        name='email'\n                        value={email}\n                        onChange={handleChange}\n                        label='Email'\n                        required\n                    />\n                    <FormInput\n                        type='password'\n                        name='password'\n                        value={password}\n                        onChange={handleChange}\n                        label='Password'\n                        required\n                    />\n                    <FormInput\n                        type='password'\n                        name='confirmPassword'\n                        value={confirmPassword}\n                        onChange={handleChange}\n                        label='Confirm password'\n                        required\n                    />\n                    <CustomButton type='submit'> SIGN UP</CustomButton>                                                           \n                \n                </form>\n\n            </div>\n        )\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: (email, password, displayName) => dispatch(signUpStart({email, password, displayName}))\n})\n\nexport default connect(null,mapDispatchToProps)(SignUp);\n\n"]},"metadata":{},"sourceType":"module"}