{"ast":null,"code":"var _jsxFileName = \"/Users/mogyorosistefan/Documents/Complete React Dev 2020/crwn-clothing/src/components/sign-in/sign-in.components.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component.jsx';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth } from '../../firebase/firebase.util';\nimport { googleSignInStart } from '../../redux/user/user.actions';\nimport './sign-in.styles.scss';\n\nconst SignIn = ({\n  googleSignInStart\n}) => {\n  //   const [email, setEmail] = useState('');\n  //   const [password, setPassword] = useState('');\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      this.setState({\n        email: '',\n        password: ''\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    }); // a name valtozoban megkapom hogy a state melyik valtozojaba \n    // kell betolteni a value erteket. ezt a meghivasnal maga az\n    //input tolti fel azzal a name ertekkel amit ott definialtam\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \" I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    label: \"Email\",\n    value: email,\n    handleChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    value: password,\n    handleChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, \" Sign in \"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, ' ', \"Sign in with Google\", ' '))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/mogyorosistefan/Documents/Complete React Dev 2020/crwn-clothing/src/components/sign-in/sign-in.components.jsx"],"names":["React","useState","connect","FormInput","CustomButton","auth","googleSignInStart","SignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","signInWithEmailAndPassword","setState","error","console","log","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport FormInput from '../form-input/form-input.component.jsx';\nimport CustomButton from '../custom-button/custom-button.component';\nimport {auth} from '../../firebase/firebase.util';\n\nimport {googleSignInStart} from '../../redux/user/user.actions';\n\nimport './sign-in.styles.scss';\n\nconst SignIn = ({googleSignInStart}) => {\n //   const [email, setEmail] = useState('');\n //   const [password, setPassword] = useState('');\n    const [userCredentials, setCredentials] = useState({email: '', password: ''});\n    const {email, password} = userCredentials;\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n        try {\n            await auth.signInWithEmailAndPassword(email, password);\n            this.setState({email: '', password: ''});\n\n        }catch(error){\n            console.log(error);\n        }\n    }\n\n    const handleChange = event => {\n        const {value, name} = event.target;\n        setCredentials({...userCredentials, [name]: value});  // a name valtozoban megkapom hogy a state melyik valtozojaba \n                                        // kell betolteni a value erteket. ezt a meghivasnal maga az\n                                        //input tolti fel azzal a name ertekkel amit ott definialtam\n    }\n\n    \n        return (\n            <div className='sign-in'>\n                <h2 className='title'> I already have an account</h2>\n                <span>Sign in with your email and password</span>\n\n                <form onSubmit={handleSubmit}>\n                    <FormInput \n                        name=\"email\" \n                        type=\"email\" \n                        label=\"Email\"\n                        value={email} \n                        handleChange={handleChange}\n                        required />\n                    \n                    <FormInput \n                        name=\"password\" \n                        type=\"password\" \n                        label=\"Password\"\n                        value={password} \n                        handleChange={handleChange}\n                        required />\n                    <div className='buttons'>\n                        <CustomButton type='submit'> Sign in </CustomButton>\n                        <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn={true}>\n                            {' '}Sign in with Google{' '}\n                        </CustomButton>\n                    </div>\n                </form>\n            </div>\n        );\n\n    \n\n}\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart())\n});\n\n\nexport default connect(null,mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}